name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21']
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        go install honnef.co/go/tools/cmd/staticcheck@2025.1
        go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.21'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.out
        flags: unittests
        fail_ci_if_error: false

    - name: Run vet
      run: go vet ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run govulncheck
      run: govulncheck ./...

  e2e:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21']
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run E2E Tests
      run: |
        cd e2e
        go mod tidy
        go test -v -timeout=120s
      env:
        # Ensure tests run in headless environment
        CI: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m